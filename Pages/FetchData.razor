@page "/fetchdata"
@inject HttpClient Http
 

    @if (main == null)
    {
<p><em>Loading...hmm</em></p> <p> @errormessage </p>
}
            else
            {
<table class="table">
    <thead>
        <tr>
            <th>LastFM Artists @main.artists.artist.Count</th>
        </tr>
        <tr>
            <th>Views | Name | streamable</th>
        </tr>
    </thead>
    
    <tbody>

        @for (int i = 0; i < 20; i++)
        {
@for (int j = 0; j < main.artists.artist.Count; j++)
{
<tr>
    <td>@main.artists.artist[j].playcount</td>
    <td>@main.artists.artist[j].name</td>
    <td>@if (@main.artists.artist[j].streamable.Equals(0)) { <p>yes</p> } else { <p>no</p> }</td>
</tr>
}}


    </tbody>
</table>}

    @code {     private Root main;
        private Boolean found;
        private int count = 0;
        private string errormessage;

        private async Task GetDataAsync()
        {
            try
            {
                string uri = "https://ws.audioscrobbler.com/2.0/?method=library.getartists&api_key=6fb86347aefc0240d93a8d2a9e08f9d8&user=joanofarctan&format=json";
                main = await Http.GetJsonAsync<Root>(uri);
                found = true;
                errormessage = String.Empty;
            }
            catch (Exception e)
            {

                found = false;
                errormessage = e.Message;


            }
        }





        protected override async Task OnInitializedAsync()
        {
            await GetDataAsync();
        }


        
        public class Image
        {
            public string size { get; set; }
            public string Text { get; set; }
        }

        public class Artist
        {
            public string url { get; set; }
            public string mbid { get; set; }
            public string tagcount { get; set; }
            public string playcount { get; set; }
            public string streamable { get; set; }
            public string name { get; set; }
            public List<Image> image { get; set; }
        }

        public class Attr
        {
            public string page { get; set; }
            public string perPage { get; set; }
            public string user { get; set; }
            public string total { get; set; }
            public string totalPages { get; set; }
        }

        public class Artists
        {
            public List<Artist> artist { get; set; }
            public Attr Attr { get; set; }
        }

        public class Root
        {
            public Artists artists { get; set; }
        }


    }

    }
